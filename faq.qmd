---
title: "FAQ"
toc: true
toc-depth: 2
repo-actions: [issue]
code-tools: false
code-link: false
---

::: callout-tip
If you do not find the answer to your question here, you can use the search bar on the top left to search the entire site. If you are still unable to find the answer, you can ask your question during the exercise hours. If you found the solution and think it would be useful to other students, you can  report an issue (see on the right) with the questions and the solution, and we will add it to the FAQ.
:::

## Organizational issues

### Which programming language will we be using?

You can use either R or Python. We will be providing code examples and support in both languages. 

### What software do I need to install?

You need a text editor or an Integrated Development Environment (IDE). [RStudio](https://posit.co/downloads/) or [VS Code](https://code.visualstudio.com/) are both good options. We also recommend the use of git and version control.

<!-- For git, please see [here](resources/tutorials/github.qmd) for instructions on how to install it.

You can use any kind of text editor or IDE you like. We recomment using [VS Code](https://code.visualstudio.com/) with the extension corresponding to your language of choice. You can also use [Rstudio](https://rstudio.com/products/rstudio/download/) for R. See [here](resources/tutorials/installing_software.qmd) for instructions on how to install the software and IDEs. -->

### Do we use moodle?

**We will be using moodle to collect the project, and any communication with you**. On the other hand, we will use this website to upload the content for the course. You are encouraged to continuously check the website for any material update.


### How are the lab sessions organized?

The lab exercises on different topics can be followed at your own pace, hence why all the materials are available on this website. You may go slower or faster through the content and then show up for support during one of the four physical lab sessions to ask your questions.

## Technical issues

### How do I ask a question or report an issue or suggestion regarding the content?
Follow these steps to propose changes/suggestions to correct the material. First, start off by making a GitHub account:

-   Create a GitHub account at [https://github.com](https://github.com/). You can use whatever username you like, but here is some helpful [username advice](https://happygitwithr.com/github-acct#username-advice).[^1]. With your UNIL email address, you can also get the [GitHub Student Developer Pack](https://www.google.com/search?q=github+pro+students&oq=github+pro+students&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQLhhA0gEIMjI1NWowajGoAgCwAgA&sourceid=chrome&ie=UTF-8)
-   Go to <https://github.com/do-unil/mlba/issues/new/choose> and select either "Suggestion" or "Typo".
    -   If Suggestion, describe in detail your suggestion, giving as much information and justification as possible.
    -   If Typo, fill in the blanks to provide as much information as possible for the typo to be fixed.
-   When done, hit Submit.
<!-- -   Later in the course you will be asked to fill out a form where you let us know if you've opened any feedback issues in the GitHub repo. I'll confirm your answers by referring back to the issues you opened, and you'll have the opportunity to earn 2 extra points (out of 100) on each of your exams for opening "useful" issues. "Useful" can be based on the number of issues (quantity) or the depth of your feedback (quality). -->
-   Before opening an issue, you must the existing ones at <https://github.com/do-unil/mlba/issues> to make sure you're not reporting something someone else has already reported.
-   Issues can refer to the text of the lecture or the labs.

[^1]: GitHub is a code hosting platform for collaboration and version control. You *do not need* not need to learn about GitHub for this class, *however* it is also where our open-source textbook is hosted so we're asking you to make an account on GitHub to be able to provide feedback on the book.


### I am lost with Github, what should I do?

GitHub has possibly the best tutorials and documentation of any software out there. You can find the [Hello world](https://docs.github.com/en/get-started/quickstart/hello-world) there. Most of the time googling your issue will lead you to the right place.

:::{.callout-note}
## Advice for you
GitHub is super useful for your projects, and working in teams. Ilia will provide you with a tutorial on how to use it.
:::

### I have bugs in my code/ something doesn't work/ I don't know how to do something, what should I do?

First google your issue. 90 times out of 100 this will solve your issues. Another 9% can be resolved by reading the documentation of 
the software you are using. For the very last percent you can ask your question during the exercises hours. 

